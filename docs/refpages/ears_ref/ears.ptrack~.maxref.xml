<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.ptrack~" module="ears">

	<digest>
		Partial tracking
	</digest>

	<description>
		Performs partial tracking by connecting spectral peaks.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">ears spectral</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Source temporal buffer or spectrogram magnitudes
			</digest>
			<description>
				If you want to compute the peaks of a temporal buffer, send it in the first inlet; if you
				want to compute the peaks of a spectral representation, send the magnitudes here (and optional phases in the second inlet)
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Optional buffer containing spectrogram phases
			</digest>
			<description>
				Source spectrogram phases
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Detected partials
			</digest>
			<description>
				Outputs partials organized as follows: one llll per partial;
				each partial contains a sublist for each peak, in the form: <b>[<m>onset</m> <m>frequency</m> <m>amplitude</m> <m>phase</m>]</b>,
				where <m>phase</m> is only present if a temporal buffer or a phase spectrogram has been provided.
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Detected partials in <o>bach.roll</o> format
			</digest>
			<description>
				Partials embedded the gathered syntax of a <o>bach.roll</o> proportionally notate score.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="outname" optional="1" type="symbol">
			<digest>
				Output buffer name
			</digest>
			<description>
				The <o>outname</o> attribute sets a name (or a wrapped list of names) for each of the buffer outles
				of the objects in ears. These names are only accounted for if the <m>alloc</m> mode is 'Static'. <br />
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(mouse)">
			<arglist />
			<digest>
				Open the buffer display window
			</digest>
			<description>
				Double-clicking on the object will open the display window for the output buffer(s).
				If more than 10 buffers are to be output, only the first 10 are displayed.
			</description>
		</method>
		<method name="list/llll">
			<arglist />
			<digest>
				Process buffers
			</digest>
			<description>
				A list or llll with buffer names will trigger the buffer processing and output the processed
				buffer names (depending on the <m>alloc</m> attribute).
				If the input buffer is a spectral buffer, then magnitudes and phases are expected to be input from the
				two inlets. Otherwise, only the temporal buffer is expected to be input from the left inlet, and
				a Short-Time Fourier Transform will be performed.
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Restart naming allocation cycle
			</digest>
			<description>
				If the <m>alloc</m> attribute is set to 'Dynamic',
				the <m>reset</m> message will force the dynamic naming to cycle and restart from the first
				used buffer name. This is especially useful in combination with iterative mechanisms.
			</description>
		</method>
		<method name="stop">
			<arglist />
			<digest>
				Abort computation
			</digest>
			<description>
				When a <m>stop</m> message is sent to an object with <m>blocking</m> attribute
				set to 0, the computation is aborted as soon as possible.
			</description>
		</method>
		<method name="write">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as audio file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeaiff">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as AIFF file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeflac">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as FLAC file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writemp3">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as MP3 file
			</digest>
			<description>
				Message attributes:<br />
				<m>@vbrmode</m> (symbol, default: VBR): VBR mode ("VBR", "CBR" or "ABR")<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@minbitrate</m> (int): Minimum bitrate in kbps<br />
				<m>@maxbitrate</m> (int): Maximum bitrate in kbps<br />
				<br />
				Save the buffer as lossy compressed MP3 file.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional message attributes specify the encoding properties (variable bitrate mode, bitrates). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeraw">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as raw file with no header
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewave">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WAV file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewv">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WavPack file
			</digest>
			<description>
				Message attributes:<br />
				<m>@correction</m> (int, default: 0): Write correction file along with a lossy wv file<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				Save the buffer as lossless WavPack compression, or as lossy WavPack compression along with a
				correction file (if the <m>correction</m> message attribute is set to 1). In this last case, a <m>bitrate</m>
				message attribute specifies the bitrate of the lossy .wv file in kbps.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Optional message attributes specify the encoding properties (correction, bitrate, sample ). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="ampunit" get="1" set="1" type="int" size="1">
			<digest>
				Amplitude Values Unit
			</digest>
			<description>
				Sets the unit for amplitudes: Linear (default) or Decibel (0dB corresponding to 1. in the linear scale).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Amplitude Values Unit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="angleunit" get="1" set="1" type="int" size="1">
			<digest>
				Angle Values Unit
			</digest>
			<description>
				Sets the unit for angles: Radians (default), Degrees, or Turns.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Angle Values Unit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="blocking" get="1" set="1" type="int" size="1">
			<digest>
				Blocking Mode
			</digest>
			<description>
				Sets the blocking mode, i.e. the thread to be used for computation: <br />
				0: the object uses its own separate thread; <br />
				1: the object uses the main thread (default); <br />
				2: the object uses whatever thread the message comes in (including, notably the scheduler thread). <br />
				The <m>blocking</m> attribute is static: it can only be set in the object box at instantiation.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Blocking Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="framesize" get="1" set="1" type="float" size="1">
			<digest>
				Frame Size
			</digest>
			<description>
				Sets the analysis frame size or window size (the unit depends on the <m>antimeunit</m> attribute)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frame Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="freqratethresh" get="1" set="1" type="float" size="1">
			<digest>
				Frequency Change Threshold
			</digest>
			<description>
				Sets a threshold for the rate of frequency change (i.e. max glissando slope), in <m>threshfrequnit</m> per seconds.
				For instance, if <m>threshfrequnit</m> is cents, this value is the maximum cents variation per second
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Partial Tracking" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frequency Change Threshold" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="frequnit" get="1" set="1" type="int" size="1">
			<digest>
				Frequency Values Unit
			</digest>
			<description>
				Sets the unit for pitch values: Hertz (default), BPM, Cents, MIDI numbers (semitones)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frequency Values Unit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="hopsize" get="1" set="1" type="float" size="1">
			<digest>
				Hop Size
			</digest>
			<description>
				Sets the analysis hop size (the unit depends on the <m>antimeunit</m> attribute)
				Floating point values are allowed.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Hop Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="interpolate" get="1" set="1" type="int" size="1">
			<digest>
				Interpolate
			</digest>
			<description>
				Toggles the ability to perform cubic interpolation to find 'true' peaks.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peak Detection" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Interpolate" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="maxgap" get="1" set="1" type="float" size="1">
			<digest>
				Maximum Gap Between Peaks In A Partial
			</digest>
			<description>
				Sets a maximum allowed temporal gap between peaks in a partial, in <m>threshtimeunit</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Partial Tracking" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Gap Between Peaks In A Partial" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="maxpeaks" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Number of Peaks
			</digest>
			<description>
				Sets the maximum number of peaks, 0 means: all.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peak Detection" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Number of Peaks" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="minpartialavgamp" get="1" set="1" type="float" size="1">
			<digest>
				Minimum Partial Average Amplitude
			</digest>
			<description>
				Sets a minimum partial average amplitude, in <m>threshampunit</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Partial Tracking" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Minimum Partial Average Amplitude" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="minpartiallength" get="1" set="1" type="float" size="1">
			<digest>
				Minimum Partial Length
			</digest>
			<description>
				Sets a minimum partial length, in <m>threshtimeunit</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Partial Tracking" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Minimum Partial Length" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="minpeakdistance" get="1" set="1" type="float" size="1">
			<digest>
				Minimum Distance Between Peaks
			</digest>
			<description>
				Sets the minimum distance between the peaks
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peak Detection" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Minimum Distance Between Peaks" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="numframes" get="1" set="1" type="atom" size="1">
			<digest>
				Number of Analysis Frames
			</digest>
			<description>
				Sets the number of analysis frames. Defaults to "auto", as this number is a consequence of the
				<m>framesize</m> and <m>hopsize</m> attributes. If this number is set to a positive integer value, the <m>hopsize</m>
				is ignored and inferred from <m>numframes</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number of Analysis Frames" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="outname" get="1" set="1" type="llll" size="1">
			<digest>
				Output Buffer Names
			</digest>
			<description>
				Sets the name for each one of the buffer outlets. Leave blank to auto-assign
				unique names.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Buffer Names" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="overlap" get="1" set="1" type="float" size="1">
			<digest>
				Overlap
			</digest>
			<description>
				Sets the overlap factor between the analysis window size and the hop size.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Overlap" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peakampthresh" get="1" set="1" type="float" size="1">
			<digest>
				Peak Threshold
			</digest>
			<description>
				Sets a threshold, so that peaks with amplitude below this threshold are discarded.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peak Detection" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Peak Threshold" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="threshampunit" get="1" set="1" type="int" size="1">
			<digest>
				Threshold Amplitude Values Unit
			</digest>
			<description>
				Sets the unit for amplitudes: Linear (default) or Decibel.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Threshold Amplitude Values Unit" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="threshfrequnit" get="1" set="1" type="int" size="1">
			<digest>
				Threshold Frequency Values Unit
			</digest>
			<description>
				Sets the unit for threshold frequency values: Hertz (default), BPM, Cents, MIDI numbers (semitones)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Threshold Frequency Values Unit" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="threshtimeunit" get="1" set="1" type="int" size="1">
			<digest>
				Threshold Time Values Unit
			</digest>
			<description>
				Sets the unit for thresholds: Milliseconds (default), Samples, Relative (0. to 1. as a percentage of the buffer length).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Threshold Time Values Unit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="timeunit" get="1" set="1" type="int" size="1">
			<digest>
				Time Values Unit
			</digest>
			<description>
				Sets the unit for time values: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length),
				The default varies depending on the modules.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Time Values Unit" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="winstartfromzero" get="1" set="1" type="int" size="1">
			<digest>
				First Window Starts At Zero
			</digest>
			<description>
				If on, the first window is centered at framesize/2; if off (default), the first window is centered at zero.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="First Window Starts At Zero" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="wintype" get="1" set="1" type="symbol" size="1">
			<digest>
				Window Type
			</digest>
			<description>
				Sets the window type.
				Available windows are:
				"rectangular", "triangular", "sine", "hann", "hamming", "blackman", "nuttall", "blackmannuttall", "blackmanharris", "gaussian", "sqrthann", "sqrthamming". <br />
				For objects that may require different windows for analysis and synthesis, two symbols can be defined (the first one being the
				analysis window, the second one being the synthesis window).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Window Type" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		If an ordinary (temporal) buffer is input, a Short-Time Fourier Transform is computed,
		its peaks are found, and finally partial tracking is performed on them.
		If a spectral buffer is input (with as many channels as bins), then the peaks
		are directly computed from the spectral representation and partial tracking is
		performed on them.
		If an llll is input, it is considered as a set of peaks to be tracked.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.peaks~" />
		<seealso name="ears.pshow~" />
		<seealso name="ears.stft~" />
		<seealso name="ears.cqt~" />
		<seealso name="ears.trans~" />
		<seealso name="ears.model.ptrack.synthesis~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (symbol)">
			<description>
				Source temporal buffer or spectrogram magnitudes.
				If you want to compute the peaks of a temporal buffer, send it in the first inlet; if you
				want to compute the peaks of a spectral representation, send the magnitudes here (and optional phases in the second inlet)
			</description>
		</entry>
		<entry name ="Inlet 2 (symbol)">
			<description>
				Optional buffer containing spectrogram phases.
				Source spectrogram phases
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Detected partials.
				Outputs partials organized as follows: one llll per partial;
				each partial contains a sublist for each peak, in the form: <b>[<m>onset</m> <m>frequency</m> <m>amplitude</m> <m>phase</m>]</b>,
				where <m>phase</m> is only present if a temporal buffer or a phase spectrogram has been provided.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Detected partials in <o>bach.roll</o> format.
				Partials embedded the gathered syntax of a <o>bach.roll</o> proportionally notate score.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		If an ordinary (temporal) buffer is input, a Short-Time Fourier Transform is computed,
		its peaks are found, and finally partial tracking is performed on them.
		If a spectral buffer is input (with as many channels as bins), then the peaks
		are directly computed from the spectral representation and partial tracking is
		performed on them.
		If an llll is input, it is considered as a set of peaks to be tracked.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
buffer, partial tracking, partials, sinusoid, spectrum.
			</description>
		</entry>
	</misc>

</c74object>