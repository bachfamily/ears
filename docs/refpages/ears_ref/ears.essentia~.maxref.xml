<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.essentia~" module="ears">

	<digest>
		Extract buffer features via the Essentia library
	</digest>

	<description>
		Perform descriptor analysis on the incoming buffer via the Essentia library
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">ears analysis</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Incoming buffer names
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Parameters for each of the features (one inlet per feature).
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Feature for the corresponding key
			</digest>
			<description>
				Feature for one of the introduced key; some features require multiple outlets (see outlet assistance).
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="features" optional="0" type="list">
			<digest>
				Features to be computed
			</digest>
			<description>
				A list of symbols, each associated with a feature to be computed
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(mouse)">
			<arglist />
			<digest>
				Open the buffer display window
			</digest>
			<description>
				Double-clicking on the object will open the display window for the output buffer(s).
				If more than 10 buffers are to be output, only the first 10 are displayed.
			</description>
		</method>
		<method name="list/llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				A list or llll in the first inlet is supposed to contain buffer names and will
				trigger the buffer processing and output the processed buffer names (depending on the <m>naming</m> attribute). <br />
				A number or an llll in the second inlet is expected to contain a essentia threshold (depending on the <m>ampunit</m>) or
				an envelope (also see <m>envampunit</m>).
			</description>
		</method>
		<method name="number">
			<arglist />
			<digest>
				Set essentia
			</digest>
			<description>
				A number in the second inlet sets the essentia parameter (depending on the <m>ampunit</m>).
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Restart naming cycle
			</digest>
			<description>
				If the <m>naming</m> attribute is set to 'Dynamic',
				the <m>reset</m> message will force the dynamic naming to cycle and restart from the first
				used name. This is especially useful in combination with iterative mechanisms.
			</description>
		</method>
		<method name="stop">
			<arglist />
			<digest>
				Abort computation
			</digest>
			<description>
				When a <m>stop</m> message is sent to an object with <m>blocking</m> attribute
				set to 0, the computation is aborted as soon as possible.
			</description>
		</method>
		<method name="write">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as audio file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeaiff">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as AIFF file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeflac">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as FLAC file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writemp3">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as MP3 file
			</digest>
			<description>
				Message attributes:<br />
				<m>@vbrmode</m> (symbol, default: VBR): VBR mode ("VBR", "CBR" or "ABR")<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@minbitrate</m> (int): Minimum bitrate in kbps<br />
				<m>@maxbitrate</m> (int): Maximum bitrate in kbps<br />
				<br />
				Save the buffer as lossy compressed MP3 file.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional message attributes specify the encoding properties (variable bitrate mode, bitrates). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeraw">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as raw file with no header
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewave">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WAV file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewv">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WavPack file
			</digest>
			<description>
				Message attributes:<br />
				<m>@correction</m> (int, default: 0): Write correction file along with a lossy wv file<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				Save the buffer as lossless WavPack compression, or as lossy WavPack compression along with a
				correction file (if the <m>correction</m> message attribute is set to 1). In this last case, a <m>bitrate</m>
				message attribute specifies the bitrate of the lossy .wv file in kbps.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Optional message attributes specify the encoding properties (correction, bitrate, sample ). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="ampunit" get="1" set="1" type="int" size="1">
			<digest>
				Amplitude Values Are In
			</digest>
			<description>
				Sets the unit for amplitudes: Linear (default) or Decibel (0dB corresponding to 1. in the linear scale).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Amplitude Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="antimeunit" get="1" set="1" type="int" size="1">
			<digest>
				Analysis Time Values Are In
			</digest>
			<description>
				Sets the unit for analysis values: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Analysis Time Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="blocking" get="1" set="1" type="int" size="1">
			<digest>
				Blocking Mode
			</digest>
			<description>
				Sets the blocking mode, i.e. the thread to be used for computation: <br />
				0: the object uses its own separate thread; <br />
				1: the object uses the main thread (default); <br />
				2: the object uses its the scheduler thread. <br />
				The <m>blocking</m> attribute is static: it can only be set in the object box at instantiation.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Blocking Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="bufinterp" get="1" set="1" type="int" size="1">
			<digest>
				Output Buffer Frame Interpolation Mode
			</digest>
			<description>
				Sets the interpolation mode for output buffers: <br />
				0 (don't resample, default): the output buffer has one sample per analysis frame, and its sample rate will be changed accordingly; <br />
				1 (lower neighbor): the output buffer is resampled to the same samplerate as the input buffer but the samples are not interpolated; <br />
				2 (linear): same as the previous one, and the samples are interpolated linearly.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Buffer Frame Interpolation Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="cqtbinsperoctave" get="1" set="1" type="int" size="1">
			<digest>
				CQT Bins Per Octave
			</digest>
			<description>
				Sets the number of bins per octave of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Bins Per Octave" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="cqtminkernelsize" get="1" set="1" type="int" size="1">
			<digest>
				CQT Minimum Kernel Size
			</digest>
			<description>
				Sets the minimum size allowed for frequency kernels of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Minimum Kernel Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="cqtminpitch" get="1" set="1" type="float" size="1">
			<digest>
				CQT Minimum Pitch
			</digest>
			<description>
				Sets the minimum pitch (in the <m>pitchunit</m>) of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Minimum Pitch" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="cqtnumbins" get="1" set="1" type="int" size="1">
			<digest>
				CQT Total Number of Bins
			</digest>
			<description>
				Sets the total number of bins of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Total Number of Bins" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="cqtscale" get="1" set="1" type="float" size="1">
			<digest>
				CQT Filters Scale
			</digest>
			<description>
				Filters scale (larger values use longer windows) of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Filters Scale" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="cqtthresh" get="1" set="1" type="float" size="1">
			<digest>
				CQT Threshold
			</digest>
			<description>
				Bins whose magnitude is below this quantile are discarded of the Constant-Q Transform.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Constant-Q Transform" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="CQT Threshold" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="envattack" get="1" set="1" type="float" size="1">
			<digest>
				Envelope Attack Time
			</digest>
			<description>
				Sets the attack time for computing envelopes (the unit depends on the <m>envtimeunit</m> attribute)
				Floating point values are allowed.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Envelopes" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Envelope Attack Time" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="envrelease" get="1" set="1" type="float" size="1">
			<digest>
				Envelope Release Time
			</digest>
			<description>
				Sets the attack time for computing envelopes (the unit depends on the <m>envtimeunit</m> attribute)
				Floating point values are allowed.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Envelopes" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Envelope Release Time" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="envtimeunit" get="1" set="1" type="int" size="1">
			<digest>
				Envelope Time Values Are In
			</digest>
			<description>
				Sets the unit for time values inside envelopes: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length).
				The default is Relative.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Envelope Time Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="framesize" get="1" set="1" type="float" size="1">
			<digest>
				Frame Size
			</digest>
			<description>
				Sets the analysis frame size or window size (the unit depends on the <m>antimeunit</m> attribute)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frame Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="frequnit" get="1" set="1" type="int" size="1">
			<digest>
				Frequency Values Are In
			</digest>
			<description>
				Sets the unit for pitch values: Hertz (default), BPM, Cents, MIDI
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frequency Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="hopsize" get="1" set="1" type="float" size="1">
			<digest>
				Hop Size
			</digest>
			<description>
				Sets the analysis hop size (the unit depends on the <m>antimeunit</m> attribute)
				Floating point values are allowed.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Hop Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="naming" get="1" set="1" type="int" size="1">
			<digest>
				Output Naming Policy
			</digest>
			<description>
				Chooses the output buffer naming policy: <br />
				0 (Copy): the buffer name is copied from the input (in-place modification).
				Notice that some objects do not allow this policy. <br />
				1 (Static): a single buffer (and hence buffer name) is created, and always used as output. <br />
				2 (Dynamic): a new buffer (and buffer name) is created for each new command.
				Beware! This may allocate a lot of memory!
				You can always cycle on a fixed set of names via the <m>reset</m> message. <br />
				You can use a shortcut to define the naming policy via a first symbolic argument: use <b>=</b> for copy,
				<b>-</b> for static and <b>!</b> for dynamic.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Naming Policy" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="numframes" get="1" set="1" type="atom" size="1">
			<digest>
				Number of Analysis Frames
			</digest>
			<description>
				Sets the number of analysis frames. Defaults to "auto", as this number is a consequence of the
				<m>framesize</m> and <m>hopsize</m> attributes. If this number is set to a positive integer value, the <m>hopsize</m>
				is ignored and inferred from <m>numframes</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number of Analysis Frames" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="onsetdetectionmethod" get="1" set="1" type="symbol" size="1">
			<digest>
				Onset Detection Method
			</digest>
			<description>
				Sets the method used for the onset detection: "hfc" (high frequency content),
				"complex" (the complex-domain spectral difference function), "complex_phase", (the simplified complex-domain
				spectral difference function taking into account phase changes, weighted by magnitude), "flux" (spectral flux),
				"melflux" (similar to spectral flux, but using half-rectified energy changes in Mel-frequency bands),
				"rms" (the difference function, measuring the half-rectified change of the RMS of the magnitude spectrum).
				Refer to the Essentia documentation for the "OnsetDetection" algorithm to know more.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Onset Detection" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Onset Detection Method" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="outname" get="1" set="1" type="llll" size="1">
			<digest>
				Output Buffer Names
			</digest>
			<description>
				Sets the name for each one of the buffer outlets. Leave blank to auto-assign
				unique names.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Buffer Names" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="overlap" get="1" set="1" type="float" size="1">
			<digest>
				Overlap
			</digest>
			<description>
				Sets the overlap factor between the analysis window size and the hop size.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Overlap" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peaksmagthresh" get="1" set="1" type="float" size="1">
			<digest>
				Peaks Magnitude Threshold
			</digest>
			<description>
				Sets the magnitude threshold for the Peaks analyis (in the <m>ampunit</m> attribute).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peaks" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Peaks Magnitude Threshold" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peaksmaxfreq" get="1" set="1" type="float" size="1">
			<digest>
				Peaks Maximum Frequency
			</digest>
			<description>
				Sets the maximum frequency for the Peaks analyis (in the <m>frequnit</m> attribute).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peaks" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Peaks Maximum Frequency" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peaksmaxnum" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Number Of Peaks
			</digest>
			<description>
				Sets the maximum number of peaks for the Peaks analyis.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peaks" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Number Of Peaks" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peaksminfreq" get="1" set="1" type="float" size="1">
			<digest>
				Peaks Minimum Frequency
			</digest>
			<description>
				Sets the minimum frequency for the Peaks analyis (in the <m>frequnit</m> attribute).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peaks" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Peaks Minimum Frequency" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="peaksorderby" get="1" set="1" type="symbol" size="1">
			<digest>
				Order Peaks By
			</digest>
			<description>
				Sets the ordering method of the peaks in the Peaks analysis.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Peaks" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Order Peaks By" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum" />
			</attributelist>
		</attribute>
		<attribute name="pitchunit" get="1" set="1" type="int" size="1">
			<digest>
				Pitch Values Are In
			</digest>
			<description>
				Sets the unit for pitch values: Cents (default), MIDI, Hertz (frequency), or frequency ratio.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Pitch Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="summary" get="1" set="1" type="int" size="1">
			<digest>
				Summarization Mode
			</digest>
			<description>
				Sets the summarization mode, for features that are requested as static but needs to be computed on a frame-by-frame basis.
				Available modes are:
				<b>First</b>: take first frame; <br />
				<b>Last</b>: last last frame; <br />
				<b>Middle</b>: take middle frame; <br />
				<b>Mean</b>: average through frames; <br />
				<b>Median</b>: median through frames (for use with single-valued essentia); <br />
				<b>Mode</b>: mode through frames (for use with discrete essentia). <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Summarization" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Summarization Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="summarypositive" get="1" set="1" type="int" size="1">
			<digest>
				Summarize Positive Values Only
			</digest>
			<description>
				Toggles the ability to only summarize the essentia with positive values (i.e. ignore negative or zero essentia),
				if any positive feature is found (otherwise, the summarization happens with all the values).
				When a feature is a vector or a matrix, it is enough for a single value in the vector or matrix to be positive in order for
				the whole vector to be accounted for.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Summarization" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Summarize Positive Values Only" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="summaryweight" get="1" set="1" type="int" size="1">
			<digest>
				Summarization Weight
			</digest>
			<description>
				Sets the summarization weight (only applicable when <m>summary</m> is set to "Mean"): None, RMS, Loudness.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Summarization" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Summarization Weight" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="timeunit" get="1" set="1" type="int" size="1">
			<digest>
				Time Values Are In
			</digest>
			<description>
				Sets the unit for time values: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length),
				The default varies depending on the modules.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Time Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="winnormalized" get="1" set="1" type="int" size="1">
			<digest>
				Windows Are Normalized
			</digest>
			<description>
				Toggles the ability for windows to be normalized to have an area of 1 and then scaled by a factor of 2.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Windows Are Normalized" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="winstartfromzero" get="1" set="1" type="int" size="1">
			<digest>
				First Window Starts At Zero
			</digest>
			<description>
				If on, the first window is centered at framesize/2; if off (default), the first window is centered at zero.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="First Window Starts At Zero" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="wintype" get="1" set="1" type="symbol" size="1">
			<digest>
				Window Type
			</digest>
			<description>
				Sets the window type.
				Available windows are:
				"rectangular", "triangular", "sine", "hann", "hamming", "blackman", "nuttall", "blackmannuttall", "blackmanharris", "gaussian", "sqrthann", "sqrthamming". <br />
				For objects that may require different windows for analysis and synthesis, two symbols can be defined (the first one being the
				analysis window, the second one being the synthesis window).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Window Type" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum" />
			</attributelist>
		</attribute>
		<attribute name="yinmaxfreq" get="1" set="1" type="float" size="1">
			<digest>
				YIN Maximum Frequency
			</digest>
			<description>
				Sets the maximum frequency for the YIN analyis (in the <m>frequnit</m> attribute).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="YIN" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="YIN Maximum Frequency" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="yinminfreq" get="1" set="1" type="float" size="1">
			<digest>
				YIN Minimum Frequency
			</digest>
			<description>
				Sets the minimum frequency for the YIN analyis (in the <m>frequnit</m> attribute).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="YIN" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="YIN Minimum Frequency" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="yintolerance" get="1" set="1" type="float" size="1">
			<digest>
				YIN Tolerance
			</digest>
			<description>
				Sets the tolerance for the YIN analyis.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="YIN" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="YIN Tolerance" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.info~" />
		<seealso name="ears.vamp~" />
		<seealso name="ears.spectrogram~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (symbol/list/llll)">
			<description>
				Incoming buffer names.
			</description>
		</entry>
		<entry name ="Inlets 2, 3, 4... (llll)">
			<description>
				Parameters for each of the features (one inlet per feature)..
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlets 1, 2, 3... (llll/buffer)">
			<description>
				Feature for the corresponding key.
				Feature for one of the introduced key; some features require multiple outlets (see outlet assistance).
			</description>
		</entry>
	</misc>

</c74object>