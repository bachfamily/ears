<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.vamp~" module="ears">

	<digest>
		Vamp plugins host
	</digest>

	<description>
		Extract audio features via Vamp plugins
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">ears analysis</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Incoming buffer names
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Parameters for each of the features (one inlet per feature).
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Feature for the corresponding key
			</digest>
			<description>
				Feature for one of the introduced key; some essentia require multiple outlets (see outlet assistance).
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Notifications
			</digest>
			<description>
				Receive notifications from <m>getlist</m> messages.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="plugin_identifiers" optional="1" type="symbol/list">
			<digest>
				List of plugin identifiers in the form: <b>libraryid:pluginid[:output]</b>.
			</digest>
			<description>
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(mouse)">
			<arglist />
			<digest>
				Open the buffer display window
			</digest>
			<description>
				Double-clicking on the object will open the display window for the output buffer(s).
				If more than 10 buffers are to be output, only the first 10 are displayed.
			</description>
		</method>
		<method name="getlist">
			<arglist />
			<digest>
				Get plugin list
			</digest>
			<description>
				The <m>getlist</m> message provides the list of identifiers for the currently installed plugins,
				organized in sublist by library.
				A <b>getlist outputs</b> message additionally provides the list of outlets for each plugin, with one
				additional level of parentheses. <br />
				A <b>getlist parameter</b> message, followed by the key identifier of a plugin
				(<m>libraryid</m>:<m>pluginid</m>, as in the object box arguments)
				provides the list of parameters for the plugin, along with their default values, ranges and additional information. <br />
				A <b>getlist libraries</b> message provides the list of libraries. <br />
				A <b>getlist detailed</b> message provides full details about functions, parameters and outputs of each plugins. <br />
			</description>
		</method>
		<method name="list/llll">
			<arglist />
			<digest>
				Store buffers
			</digest>
			<description>
				A list or llll with buffer names will be considered as the names of the buffers to be stored and output
				(also according on the <m>naming</m> attribute).
			</description>
		</method>
		<method name="reset">
			<arglist />
			<digest>
				Restart naming cycle
			</digest>
			<description>
				If the <m>naming</m> attribute is set to 'Dynamic',
				the <m>reset</m> message will force the dynamic naming to cycle and restart from the first
				used name. This is especially useful in combination with iterative mechanisms.
			</description>
		</method>
		<method name="stop">
			<arglist />
			<digest>
				Abort computation
			</digest>
			<description>
				When a <m>stop</m> message is sent to an object with <m>blocking</m> attribute
				set to 0, the computation is aborted as soon as possible.
			</description>
		</method>
		<method name="write">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as audio file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeaiff">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as AIFF file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeflac">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as FLAC file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writemp3">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as MP3 file
			</digest>
			<description>
				Message attributes:<br />
				<m>@vbrmode</m> (symbol, default: VBR): VBR mode ("VBR", "CBR" or "ABR")<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@minbitrate</m> (int): Minimum bitrate in kbps<br />
				<m>@maxbitrate</m> (int): Maximum bitrate in kbps<br />
				<br />
				Save the buffer as lossy compressed MP3 file.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional message attributes specify the encoding properties (variable bitrate mode, bitrates). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writeraw">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as raw file with no header
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewave">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WAV file
			</digest>
			<description>
				Message attributes:<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				See equivalent <o>buffer~</o> method.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Additional optional <m>format</m> message attributes specifies the output sample type, if applicable. <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
		<method name="writewv">
			<arg name="bufferindex" optional="1" type="int" />
			<arg name="filename_or_path" optional="1" type="symbol" />
			<digest>
				Save output as WavPack file
			</digest>
			<description>
				Message attributes:<br />
				<m>@correction</m> (int, default: 0): Write correction file along with a lossy wv file<br />
				<m>@bitrate</m> (int): Bitrate in kbps<br />
				<m>@format</m> (symbol, default: int16): Sample Format<br />
				<br />
				Save the buffer as lossless WavPack compression, or as lossy WavPack compression along with a
				correction file (if the <m>correction</m> message attribute is set to 1). In this last case, a <m>bitrate</m>
				message attribute specifies the bitrate of the lossy .wv file in kbps.
				Additional optional arguments specify the buffer index (if more than one buffer are stored in the objct)
				and the filename (otherwise a dialog menu will appear).
				Optional message attributes specify the encoding properties (correction, bitrate, sample ). <br />
				Accepted sampletype symbols are : 'int8' (8-bit integer), 'int16' (16-bit integer, default),
				'int24' (24-bit integer), 'int32' (32-bit integer), 'float32' (32-bit floating-point),
				'float64' (64-bit floating-point), 'mulaw' (8-bit mu-law encoding), 'alaw' (8-bit a-law encoding) <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="antimeunit" get="1" set="1" type="int" size="1">
			<digest>
				Analysis Time Values Are In
			</digest>
			<description>
				Sets the unit for analysis values: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length).
				The default is always Milliseconds except for the <o>ears.repeat~</o> module (Relative).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Analysis Time Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="auto" get="1" set="1" type="int" size="1">
			<digest>
				Automatically Assign Analysis Parameters
			</digest>
			<description>
				Toggles the ability to automatically assign analysis parameters according to the preferred values
				of each plugin
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Automatically Assign Analysis Parameters" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="blocking" get="1" set="1" type="int" size="1">
			<digest>
				Blocking Mode
			</digest>
			<description>
				Sets the blocking mode, i.e. the thread to be used for computation: <br />
				0: the object uses its own separate thread; <br />
				1: the object uses the main thread (default); <br />
				2: the object uses its the scheduler thread. <br />
				The <m>blocking</m> attribute is static: it can only be set in the object box at instantiation.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Blocking Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="framesize" get="1" set="1" type="float" size="1">
			<digest>
				Frame Size
			</digest>
			<description>
				Sets the analysis frame size or window size (the unit depends on the <m>antimeunit</m> attribute)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Frame Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="hopsize" get="1" set="1" type="float" size="1">
			<digest>
				Hop Size
			</digest>
			<description>
				Sets the analysis hop size (the unit depends on the <m>antimeunit</m> attribute)
				Floating point values are allowed.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Hop Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="naming" get="1" set="1" type="int" size="1">
			<digest>
				Output Naming Policy
			</digest>
			<description>
				Chooses the output buffer naming policy: <br />
				0 (Copy): the buffer name is copied from the input (in-place modification).
				Notice that some objects do not allow this policy. <br />
				1 (Static): a single buffer (and hence buffer name) is created, and always used as output. <br />
				2 (Dynamic): a new buffer (and buffer name) is created for each new command.
				Beware! This may allocate a lot of memory!
				You can always cycle on a fixed set of names via the <m>reset</m> message. <br />
				You can use a shortcut to define the naming policy via a first symbolic argument: use <b>=</b> for copy,
				<b>-</b> for static and <b>!</b> for dynamic.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Naming Policy" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="numframes" get="1" set="1" type="atom" size="1">
			<digest>
				Number of Analysis Frames
			</digest>
			<description>
				Sets the number of analysis frames. Defaults to "auto", as this number is a consequence of the
				<m>framesize</m> and <m>hopsize</m> attributes. If this number is set to a positive integer value, the <m>hopsize</m>
				is ignored and inferred from <m>numframes</m>.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number of Analysis Frames" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="outname" get="1" set="1" type="llll" size="1">
			<digest>
				Output Buffer Names
			</digest>
			<description>
				Sets the name for each one of the buffer outlets. Leave blank to auto-assign
				unique names.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Buffer Names" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="overlap" get="1" set="1" type="float" size="1">
			<digest>
				Overlap
			</digest>
			<description>
				Sets the overlap factor between the analysis window size and the hop size.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Analysis" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Overlap" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="summary" get="1" set="1" type="int" size="1">
			<digest>
				Summarization Mode
			</digest>
			<description>
				Sets the summarization mode. Available modes are:
				<b>First</b>: take first frame; <br />
				<b>Last</b>: last last frame; <br />
				<b>Middle</b>: take middle frame; <br />
				<b>Mean</b>: average through frames; <br />
				<b>Median</b>: median through frames (for use with single-valued essentia); <br />
				<b>Mode</b>: mode through frames (for use with discrete essentia). <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Summarization" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Summarization Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="timeunit" get="1" set="1" type="int" size="1">
			<digest>
				Time Values Are In
			</digest>
			<description>
				Sets the unit for time values: Milliseconds, Samples, Relative (0. to 1. as a percentage of the buffer length).
				The default is always Milliseconds except for the <o>ears.repeat~</o>, <o>ears.paulstretch~</o> modules (Relative).
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Units" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Time Values Are In" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.essentia~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (symbol/list/llll)">
			<description>
				Incoming buffer names.
			</description>
		</entry>
		<entry name ="Inlets 2, 3, 4... (llll)">
			<description>
				Parameters for each of the features (one inlet per feature)..
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlets 1, 2, 3... (llll/buffer)">
			<description>
				Feature for the corresponding key.
				Feature for one of the introduced key; some essentia require multiple outlets (see outlet assistance).
			</description>
		</entry>
		<entry name ="The last Outlet (llll)">
			<description>
				Notifications.
				Receive notifications from <m>getlist</m> messages.
			</description>
		</entry>
	</misc>

</c74object>