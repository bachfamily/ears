<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.assemble~" module="ears">

	<digest>
		Mix buffers one by one
	</digest>

	<description>
		Assembles an output buffer from a sequence of incoming buffers
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">ears basic</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Output Assembled Result
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Name of the buffer to be assembled
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Gain
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="3" type="INLET_TYPE">
			<digest>
				Offset or inter-offset intervals
			</digest>
			<description>
				The usage of offsets or inter-offset intervals depends on the <m>delta</m> attribute
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Output buffer names
			</digest>
			<description>
				Name of the output buffer
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="outname" optional="1" type="symbol">
			<digest>
				Output buffer name
			</digest>
			<description>
			</description>
		</objarg>
		<objarg name="default_ioi" optional="1" type="number">
			<digest>
				Default inter-offset interval
			</digest>
			<description>
				Sets a default inter-offset interval
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="list/llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				A list or llll in the furst inlet with buffer names will trigger the buffer processing and output the processed
				buffer names (depending on the <m>naming</m> attribute). <br />
				A number, list or llll in the second inlet is interpreted to contain the gain
				for each one of the incoming buffer (in the current <m>ampunit</m>). <br />
				A number, list or llll in the third inlet is interpreted to contain the temporal offset
				for each one of the incoming buffer (in the current <m>timeunit</m>). Non-integer sample offsets are only accounted for
				if the <m>interp</m> attribute is on, otherwise they are rounded to the nearest integer sample. <br />
			</description>
		</method>
		<method name="number">
			<arglist />
			<digest>
				Set Gain or Offset
			</digest>
			<description>
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="delta" get="1" set="1" type="int" size="1">
			<digest>
				Use Inter-Onset Intervals
			</digest>
			<description>
				Toggles the ability to use inter-onset intervals instead of onsets to define
				the position of the buffers to be assembled.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Use Inter-Onset Intervals" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="interp" get="1" set="1" type="int" size="1">
			<digest>
				Interpolate Non-Integer Offset
			</digest>
			<description>
				Toggles the ability to perform band-limited interpolation via resampling for non-integer offsets.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Interpolate Non-Integer Offset" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="normalize" get="1" set="1" type="int" size="1">
			<digest>
				Normalize Output
			</digest>
			<description>
				Sets the normalization mode for the output buffer:
				0 = Never, does not normalize; 1 = Always, always normalizes to 1.; 2 = Overload Protection Only, only
				normalizes to 1. if some samples exceed in modulo 1.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Normalize Output" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		This module is related to <o>ears.mix~</o>, but should be preferred to it,
		for instance in combination with <o>ears.read~</o> with <m>iter</m> 1 attribute set,
		in order to optimize memory allocation. Indeed, <o>ears.mix~</o> needs all the buffers
		to be allocated before mixing, while <o>ears.assemble~</o> will do this with one buffer at a time.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.mix~" />
		<seealso name="ears.read~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (bang)">
			<description>
				Output Assembled Result.
			</description>
		</entry>
		<entry name ="Inlet 2 (list)">
			<description>
				Name of the buffer to be assembled.
			</description>
		</entry>
		<entry name ="Inlet 3 (number)">
			<description>
				Gain.
			</description>
		</entry>
		<entry name ="Inlet 4 (number)">
			<description>
				Offset or inter-offset intervals.
				The usage of offsets or inter-offset intervals depends on the <m>delta</m> attribute
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (symbol/list)">
			<description>
				Output buffer names.
				Name of the output buffer
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		This module is related to <o>ears.mix~</o>, but should be preferred to it,
		for instance in combination with <o>ears.read~</o> with <m>iter</m> 1 attribute set,
		in order to optimize memory allocation. Indeed, <o>ears.mix~</o> needs all the buffers
		to be allocated before mixing, while <o>ears.assemble~</o> will do this with one buffer at a time.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
buffer, assemble, mix, superpose, merge.
			</description>
		</entry>
	</misc>

</c74object>