<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.py~" module="ears">

	<digest>
		Offline host for patches operating on buffers
	</digest>

	<description>
		Loads a DSP patch and runs it in non-realtime
		reading from and writing to buffers
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Francesco Bianchi and Andrea Agostini</metadata>
		<metadata name="tag">ears py</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Incoming buffer name
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Incoming data for <o>ears.in</o>.
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Output buffer
			</digest>
			<description>
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Output data from <o>ears.out</o>.
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="outnames" optional="1" type="symbol">
			<digest>
				Output buffer names
			</digest>
			<description>
			</description>
		</objarg>
		<objarg name="patcher" optional="1" type="symbol">
			<digest>
				Patcher name
			</digest>
			<description>
				Sets the name of the patch to be loaded
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(doubleclick)">
			<arglist />
			<digest>
				Open patcher
			</digest>
			<description>
				Double-clicking on the object
				opens the patcher window loaded in the object, if any.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Run py
			</digest>
			<description>
				A <m>bang</m> in any of the buffer inlets causes the object
				to perform the py with the latest received
				buffer names and parameters. <br/>
				A <m>bang</m> in any other inlet is routed
				to the client patch through its <o>ears.in</o> objects.
			</description>
		</method>
		<method name="list/llll">
			<arglist />
			<digest>
				Function depends on inlet
			</digest>
			<description>
				If a list or llll with buffer names is passed to one of the buffer inlets,
				The contents of the corresponding buffers will be passed
				to the loaded patcher through the patcher's
				<o>ears.in~</o> and <o>ears.mc.in~</o> objects,
				for being pyed by the DSP chain of the patcher itself.
				The names of the buffers containing the pyed audio,
				as output by the patcher's <o>ears.out~</o> and <o>ears.mc.out~</o> objects,
				will be subsequently output.<br/>
				Lists and llll received in non-buffer inlets
				will be passed as they are to the loaded patcher,
				through its <o>ears.in</o> objects.<br/>
				If the list or llll is received in the first inlet,
				The pying will be triggered.
			</description>
		</method>
		<method name="open">
			<arglist />
			<digest>
				Open patcher
			</digest>
			<description>
				The <m>open</m> message
				opens the patcher window loaded in the object, if any.
			</description>
		</method>
		<method name="patchername">
			<arglist />
			<digest>
				Load patch
			</digest>
			<description>
				The <m>patchername</m> message in any of the buffer inlets causes the object
				to stop immediately the py it is performing;
				in any other inlet, it is routed
				to the client patch through its <o>ears.in</o> objects.
			</description>
		</method>
		<method name="stop">
			<arglist />
			<digest>
				Stop py
			</digest>
			<description>
				The <m>stop</m> message in any of the buffer inlets causes the object
				to stop immediately the py it is performing;
				in any other inlet, it is routed
				to the client patch through its <o>ears.in</o> objects.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="envpath" get="1" set="1" type="symbol" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="function" get="1" set="1" type="symbol" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="scriptpath" get="1" set="1" type="symbol" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.in" />
		<seealso name="ears.in~" />
		<seealso name="ears.mc.in~" />
		<seealso name="ears.out" />
		<seealso name="ears.out~" />
		<seealso name="ears.mc.out~" />
		<seealso name="ears.pyinfo~" />
		<seealso name="ears.tovector~" />
		<seealso name="ears.fromvector~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlets 1, 2, 3... (symbol/llll)">
			<description>
				Incoming buffer name.
			</description>
		</entry>
		<entry name ="Inlets 2, 3, 4... (symbol/llll)">
			<description>
				Incoming data for <o>ears.in</o>..
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlets 1, 2, 3... (symbol/llll)">
			<description>
				Output buffer.
			</description>
		</entry>
		<entry name ="Outlets 2, 3, 4... (symbol/llll)">
			<description>
				Output data from <o>ears.out</o>..
			</description>
		</entry>
	</misc>

</c74object>