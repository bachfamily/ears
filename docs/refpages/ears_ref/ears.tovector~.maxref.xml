<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.tovector~" module="ears">

	<digest>
		Convert synchronously a list of numbers into a signal vector
	</digest>

	<description>
		Use the <o>ears.tovector~</o> object inside a patch loaded by <o>ears.process~</o>
		collects values into a signal vector. All the values for a single signal vector must be received
		within a single event triggered synchronously to the non-realtime audio vector
		as managed by <o>ears.process~</o>.
		This can be achieved by responding to messages produced by <o>ears.tovector~</o>
		or by the position message outlet of <o>ears.processinfo~</o>.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Andrea Agostini, partly based upon work by Alexander J. Harker</metadata>
		<metadata name="tag">ears process</metadata>
	</metadatalist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Values to be collected or control messages
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="clear">
			<arglist />
			<digest>
				Clear the vector
			</digest>
			<description>
				The <m>clear</m> message
				sets all the samples of the current vector to 0.
				If <m>clear</m> is not sent
				(or the <m>autoclear</m> attribute is not set),
				the samples collected in the previous vector are kept
				and progressively replaced.
			</description>
		</method>
		<method name="float">
			<arglist />
			<digest>
				Float value to be collected
			</digest>
			<description>
				A floating-point number is appended
				to the signal vector currently being collected.
				If enough samples to fill a vector
				have already been collected, the incoming value is discarded.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Integer value to be collected
			</digest>
			<description>
				An integer is appended
				to the signal vector currently being collected.
				If enough samples to fill a vector
				have already been collected, the incoming value is discarded.
			</description>
		</method>
		<method name="list">
			<arglist />
			<digest>
				List of values to be collected
			</digest>
			<description>
				The values contained in a list
				are appended to the signal vector currently being collected.
				Once enough samples to fill a vector have been collected,
				the subsequent ones are discarded.
			</description>
		</method>
		<method name="set">
			<arglist />
			<digest>
				Set specific samples
			</digest>
			<description>
				The <m>set</m> message
				followed by an integer
				sets the position of the next sample
				to be written in the vector (counting from 1).
				Optional further values will be appended
				to the vector starting from the new position.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="autoclear" get="1" set="1" type="int" size="1">
			<digest>
				Auto Clear
			</digest>
			<description>
				When the <m>autoclear</m> attribute is set to 1 (the default),
				all the samples in each new signal vector
				are is initialized to 0.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Auto Clear" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.out~" />
		<seealso name="ears.tovector~" />
	</seealsolist>

	<misc name = "Output">
		<entry name ="Outlet 1 (list/set/clear)">
			<description>
				Values to be collected or control messages.
			</description>
		</entry>
	</misc>

</c74object>