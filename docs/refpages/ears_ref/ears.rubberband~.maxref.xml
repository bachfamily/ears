<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="ears.rubberband~" module="ears">

	<digest>
		Rubber Band pitch and time processing
	</digest>

	<description>
		Implements the Rubber Band library algorithms for pitch shifting and time stretching.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">ears time and pitch</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Incoming buffer names
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Stretch factor or envelope
			</digest>
			<description>
				Sets the stretch factor, either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>factor</m> <m>slope</m>] [<m>x</m> <m>factor</m> <m>slope</m>]...]</b>.
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Pitch shift amount or envelope
			</digest>
			<description>
				Sets the pitch shift (unit defined via the <m>pitchunit</m> attribute), either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>shift</m> <m>slope</m>] [<m>x</m> <m>shift</m> <m>slope</m>]...]</b>,
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Output buffer names
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="outnames" optional="1" type="symbol">
			<digest>
				Output buffer names
			</digest>
			<description>
			</description>
		</objarg>
		<objarg name="stretch_factor" optional="0" type="float/list/llll">
			<digest>
				Stretch factor or envelope
			</digest>
			<description>
				Sets the stretch factor, either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>factor</m> <m>slope</m>] [<m>x</m> <m>factor</m> <m>slope</m>]...]</b>.
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</objarg>
		<objarg name="pitch_shift_amount" optional="0" type="float/list/llll">
			<digest>
				Pitch shift amount or envelope
			</digest>
			<description>
				Sets the pitch shift (unit defined via the <m>pitchunit</m> attribute), either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>shift</m> <m>slope</m>] [<m>x</m> <m>shift</m> <m>slope</m>]...]</b>,
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="list/llll">
			<arglist />
			<digest>
				Process buffers
			</digest>
			<description>
				A list or llll with buffer names will trigger the buffer processing and output the processed
				buffer names (depending on the <m>naming</m> attribute).
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="blocksize" get="1" set="1" type="int" size="1">
			<digest>
				Block Size
			</digest>
			<description>
				Sets the block size for granular processes such as envelopes.
				The unit depends on the <m>timeunit</m> attribute.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="20" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Block Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="detector" get="1" set="1" type="int" size="1">
			<digest>
				Transient Detection Algorithm
			</digest>
			<description>
				Controls the type of
				transient detector used.  These options may be changed
				after construction when running in real-time mode, but not when
				running in offline mode. Options are: <br />
				- <b>Compound</b> (0, default): Use a general-purpose
				transient detector which is likely to be good for most
				situations. <br />
				- <b>Percussive</b> (1): Detect percussive
				transients.  Note that this was the default and only option
				in Rubber Band versions prior to 1.5. <br />
				- <b>Soft</b> (2): Use an onset detector with less
				of a bias toward percussive transients.  This may give better
				results with certain material (e.g. relatively monophonic
				piano music).
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Transient Detection Algorithm" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="fftwin" get="1" set="1" type="int" size="1">
			<digest>
				FFT Windows Size
			</digest>
			<description>
				Controls the window size for
				FFT processing. The window size actually used will depend on
				many factors, but it can be influenced.  Options are: <br />
				- <b>Short</b> (0): Use a shorter window.  This may
				result in crisper sound for audio that depends strongly on
				its timing qualities. <br />
				- <b>Standard</b> (1, default): Use the default window size.
				The actual size will vary depending on other parameters.
				This option is expected to produce better results than the
				other window options in most situations.
				- <b>Long</b> (2): Use a longer window.  This is
				likely to result in a smoother sound at the expense of
				clarity and timing.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="FFT Windows Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="formants" get="1" set="1" type="int" size="1">
			<digest>
				Preserve Formants
			</digest>
			<description>
				Controls the handling of formant shape
				(spectral envelope) when pitch-shifting.
				If off (default), it applies no special formant
				processing.  The spectral envelope will be pitch shifted as normal.
				If on, it preserves the spectral
				envelope of the unshifted signal.  This permits shifting the
				note frequency without so substantially affecting the
				perceived pitch profile of the voice or instrument.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Preserve Formants" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="phase" get="1" set="1" type="int" size="1">
			<digest>
				Phase Adjustment
			</digest>
			<description>
				Controls the adjustment of
				component frequency phases from one analysis window to the next
				during non-transient segments. Options are: <br />
				- <b>Laminar</b> (0, default): Adjust phases when stretching in
				such a way as to try to retain the continuity of phase
				relationships between adjacent frequency bins whose phases
				are behaving in similar ways.  This, the default setting,
				should give good results in most situations. <br />
				- <b>Independent</b> (1): Adjust the phase in each
				frequency bin independently from its neighbours.  This
				usually results in a slightly softer, phasier sound.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Phase Adjustment" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="pitchmode" get="1" set="1" type="int" size="1">
			<digest>
				Pitch Shift Mode
			</digest>
			<description>
				Control the method used for
				pitch shifting.  Options are: <br />
				- <b>High Speed</b> (0): Use a method with a CPU cost
				that is relatively moderate and predictable.  This may
				sound less clear than OptionPitchHighQuality, especially
				for large pitch shifts. <br />
				- <b>High Quality</b> (1): Use the highest quality
				method for pitch shifting.  This method has a CPU cost
				approximately proportional to the required frequency shift.
				- <b>High Consistency</b> (2, default): Use the method that gives
				greatest consistency when used to create small variations in
				pitch around the 1.0-ratio level.  Unlike the previous two
				options, this avoids discontinuities when moving across the
				1.0 pitch scale in real-time; it also consumes more CPU than
				the others in the case where the pitch scale is exactly 1.0.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="2" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Pitch Shift Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="smoothing" get="1" set="1" type="int" size="1">
			<digest>
				Smoothing
			</digest>
			<description>
				Controls the use of
				window-presum FFT and time-domain smoothing. By default it is off.
				If it is on, the algorithm Use time-domain smoothing.  This
				will result in a softer sound with some audible artifacts
				around sharp transients, but it may be appropriate for longer
				stretches of some instruments and can mix well with
				short <m>fftwin</m>
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Smoothing" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="stretchmode" get="1" set="1" type="int" size="1">
			<digest>
				Stretch Mode
			</digest>
			<description>
				Controls the profile used for
				variable timestretching.  Rubber Band always adjusts the
				stretch profile to minimise stretching of busy broadband
				transient sounds, but the degree to which it does so is
				adjustable.  Options are: <br />
				- <b>Elastic</b> (0, default): The audio will be
				stretched at a variable rate, aimed at preserving the quality
				of transient sounds as much as possible.  The timings of low
				activity regions between transients may be less exact than
				when the precise flag is set. <br />
				- <b>Precise</b> (1): Although still using a variable
				stretch rate, the audio will be stretched so as to maintain
				as close as possible to a linear stretch ratio throughout.
				Timing may be better than when using \c OptionStretchElastic, at
				slight cost to the sound quality of transients.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Stretch Mode" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
		<attribute name="transients" get="1" set="1" type="int" size="1">
			<digest>
				Transient Type
			</digest>
			<description>
				Sets the transient mode, to control the component frequency
				phase-reset mechanism that
				may be used at transient points to provide clarity and realism to percussion
				and other significant transient sounds. Options are: <br />
				- <b>Crisp</b> (0): Reset component phases at the
				peak of each transient (the start of a significant note or
				percussive event).  This, the default setting, usually
				results in a clear-sounding output; but it is not always
				consistent, and may cause interruptions in stable sounds
				present at the same time as transient events.  The
				<m>detector</m> attribute can be used to tune this to some
				extent. <br />
				- <b>Mixed</b> (1): Reset component phases at the
				peak of each transient, outside a frequency range typical of
				musical fundamental frequencies.  The results may be more
				regular for mixed stable and percussive notes than
				"Crisp", but with a "phasier" sound.  The
				balance may sound very good for certain types of music and
				fairly bad for others. <br />
				- <b>Smooth</b> (2, default): Do not reset component phases
				at any point.  The results will be smoother and more regular
				but may be less clear than with either of the other
				transients flags.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="2" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Transient Type" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enumindex" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The original code for the Rubber Band library is by Breakfast Quay (https://breakfastquay.com/rubberband/)
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ears.paulstretch~" />
		<seealso name="ears.resample~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (symbol/list/llll)">
			<description>
				Incoming buffer names.
			</description>
		</entry>
		<entry name ="Inlet 2 (float/list/llll)">
			<description>
				Stretch factor or envelope.
				Sets the stretch factor, either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>factor</m> <m>slope</m>] [<m>x</m> <m>factor</m> <m>slope</m>]...]</b>.
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</entry>
		<entry name ="Inlet 3 (float/list/llll)">
			<description>
				Pitch shift amount or envelope.
				Sets the pitch shift (unit defined via the <m>pitchunit</m> attribute), either as a single number or as an llll
				containing an envelope in the form <b>[[<m>x</m> <m>shift</m> <m>slope</m>] [<m>x</m> <m>shift</m> <m>slope</m>]...]</b>,
				where <m>x</m> values' range depends on the <m>envtimeunit</m> attribute.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (symbol/list)">
			<description>
				Output buffer names.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The original code for the Rubber Band library is by Breakfast Quay (https://breakfastquay.com/rubberband/)
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
buffer, pitch, stretch, shift, pitchshift, timestretch, rubberband, rubber, band.
			</description>
		</entry>
	</misc>

</c74object>